i
x 删除当前光标所在的一个字符
:wq
dd 删除当前行，并把删除的行存到剪贴板里	
p 粘贴剪贴板

xxxxx

17|高性能缓存架构

--典型场景
	复杂运算后得出的数据
	读多写少的数据
--缓存基本原理
	将可能重复使用的数据放到内存中，一次生成，多次使用，避免每次使用都去访问存储系统。
--缓存架构设计要点
	1 缓存穿透：缓存中无数据，业务系统需再次访问存储系统
	  两种情况：存储数据不存在、缓存数据生成耗费大量时间或资源
	2 缓存雪崩：缓存失效（过期）后引起系统性能急剧下降。（业务系统需重新生成缓存、再次访问存储系统、再次进行计算的这个期间，旧缓存被清除、新缓存未生成，叠加高并发请求）
          解决办法：更新锁机制和后台更新机制
		更新锁：对缓存更新加锁保护，保证只有一个线程能够进行缓存更新。分布式集群业务系统，需要用分布式锁，如ZK
		后台更新：由后台线程来更新缓存，而不是由业务线程来更新缓存，缓存本事的有效期设置为永久，后台线程定时更新缓存
	3 缓存热点：复制多分缓存副本，将请求分散到多个缓存服务器上，减轻缓存热点导致的单台缓存服务器压力。

--其他知识点

mysql的数据库缓存：
	1 mysql第一种缓存叫sql语句结果缓存，条件苛刻，程序员不可控，一般dba线上都关闭这个功能
	2 mysql第二种缓存是innodb pool，缓存的是磁盘上的分页数据，不是sql查询的结果，sql查询的执行过程省不了。而mc、redis这些实际上都是缓存sql的结果，两种缓存方式，性能差很远。
因此，可控性、性能是数据库缓存和独立缓存的主要区别。

