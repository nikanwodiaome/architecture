----------22CAP定理----------------

*CAP定理定义
    CAP定理 又被称作布鲁尔定理 
    Consistency/Availability/Partition Tolerance
*CAP理论定义
    第一版解释：
        对于一个分布式计算机系统，不可能同时满足一致性Consistancy、可用性Availability、分区容错性Partition Tolerance 三个设计约束。
        已过时。
    第二版解释：
        在一个分布式系统（指相互连接并共享数据的节点的集合）中，当涉及读写操作时，只能保证一致性 Consistance、可用性Availability、分区容错性Partition Tolerance三者中的两个，另一个必须被牺牲。

        第二版更加准确。
        强调两点:1 互联、共享数据
                 因为分布式系统并不一定会互联和共享数据。例如 Memcache集群，相互之间就没有连接和共享数据
                 因此MC集群就不符合CAP理论探讨的对象；而MySQL集群就是互联和进行数据复制，因此是CAP理论探讨的对象。
                 2 write/read pair CAP关注的是对数据的读写操作，而不是分布式系统的所有功能。
                 因此ZK的选举机制就不是CAP探讨的对象。
    第二版的CAP三个词语的解释：

    一致性 Consistancy
        对某个指定的客户端来说，读操作保证能够返回最新的写操作结果。
            ——即站在客户端的角度来观察系统的行为和特征。对于系统执行事务来说，在事务执行过程中，系统其实处于一个不一致的状态，不同节点的数据并不完全一致。
    可用性 Availability
        非故障的节点在合理的时间内返回合理的响应（不是错误和超时的响应）
            ——强调非故障的节点和 合理的响应和合理的时间，而且特别强调了不是错误或者超时
    分区容忍性 Partition Tolerance
        当出现网络分区后，系统能够继续履行职责
            ——强调 发挥作用、履行职责，要返回合理的响应，才是履行职责；强调现象，即发生了分区现象，不管是什么原因，可能是丢包、可能是连接中断、可能是拥塞等等，只要发生了网络分区，统统算入。
*CAP应用
    CAP理论定义是三个要素中只能取两个，但是放在分布式环境下来思考，我们必须选择P要素，因为网络本身无法做到100%可靠，有可能出现故障，所以分区是一个必然的现象。
    如果我们选了CA而放弃了P，则发生分区现象时，为了保证C，系统需要禁止写入，当有写入请求时，系统返回error，这又和A冲突了，因为A要求返回no error 和 no timeout。
    因此分布式系统不能选择CA架构，只能选择CP或者AP架构。

*CP 一致性和分区容错性
    为保证一致性，发生分区现象时，N1上数据无法同步至N2，这是客户端C访问N2，N2需要返回error，这种处理方式违背了可用性的要求，因此CAP三者只能满足CP
*AP 可用性和分区容错性
    为保证可用性，发生分区现象时，N1上数据已经更新为最新值，N1和N2间复制通道中断，这是客户端C访问N2，N2将当前自己拥有的旧数据返回给客户端C，而实际上当前最新数据已经发生变化了，
    这就不满足一致性的要求，因此CAP三者只能满足AP.注意，这里N2返回的旧数据，不是一个正确的结果，但是一个合理的结果。

#############其他知识############
1 CAP理论是忽略延时的，这就是说理论做了一个假设，只要网络通数据就会一致。
2 CAP中 P要求分布式和数据同步，C要求数据完全一致，A要求返回及时
3 在CP架构中，N1、N2通讯如果中断，N2根据什么作为依据返回error？————一般根据心跳检测。
4 分区现象理解——分区就是集群中一部分节点和另外一部分节点无法通信。
5 不互联的集群举例：mv集群的节点就不互联，负载均衡的集群节点也不互联。
6 很多工程实现都是选择AP并保证最终一致性，但是选择了A不就意味着返回数据不是最新的吗？最终一致性是如何实现的？
    人工数据订正和补偿，定时脚本批量检查和修复都可以。                               
