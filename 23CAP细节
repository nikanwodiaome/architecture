==========CAP具体细节 与ACID、BASE的对比========================

*CAP关键细节点
    1--CAP关注的粒度是数据，而不是整个系统。
    布鲁尔的论文解释：
        C与A之间的取舍可以在同一系统内以非常细小的粒度反复发生，而每一次的决策可能因为具体的操作，乃至因为牵涉到特定的数据或
        用户而有所不同。
    这句话是理解和应用CAP理论非常关键的一点。CAP理论的定义和解释中，用的都是system、node这类系统级的概念，容易造成很大的误导，
    认为进行架构设计是，整个系统要么选择CP，要么选择AP。但在实际设计过程中，每个系统不可能只处理一种数据，而是包含多种类型的
    数据，有的数据必须选择CP，有的数据必须选择AP。所以做设计时，需要将系统内的数据按照不同的应用场景和要求进行分类，每类数据
    选择不同的策略CP还是AP，而不是直接限定整个系统所有数据都是同一策略。
    2--CAP是忽略网络延迟的。
        这是一个非常隐含的假设，布鲁尔在定义一致性时，并没有将延迟考虑进去。也就是说，当事务提交时，数据能够瞬间复制到所有节点。
        实际情况下，节点A复制数据到节点B，总是需要花费一定时间的，同机房，几毫秒；异地机房可能几十毫秒。这意味着，CAP理论中的C
        在实践中是不可鞥完美实现的。这意味着，某些严苛的场景，例如和金钱相关的用户余额，或者和抢购相关的商品库存，技术上是无法
        做到分布式场景下完美的一致性的。而业务上必须要求一致性，因此单个用户的余额，单个商品的库存，理论上要求选择CP，实际上CP
        都做不到，只能选择CA。就是说，只能单点写入，其他节点做备份，无法做到分布式情况下多点写入。
        这并不意味着这类系统无法应用分布式架构，只是说 单个用户余额、单个商品库存 无法做分布式，但系统整体还是可以应用分布式架构的。
        例如:挖掘机挖断光缆后，支付宝只有一部分用户会出现业务异常，而不是所有用户业务异常。
    3--正常运行情况下，不存在CP和AP的选择，可以同时满足CA。
        CAP理论告诉我们分布式系统只能选择CP或者AP，但其实这里的前提条件是系统发生了 分区 现象。
        所以，架构设计的时候既要考虑分区发生时选择CP还是AP，也要考虑分区没有发生时如何保证CA。
    4--放弃不等于什么都不做，需要为分区恢复后做准备。
        CAP理论告诉我们三者只能取两个，需要 牺牲 另外一个，这里的 牺牲 有一定误导作用，因为 牺牲 让很多人理解成什么都不做。实际上，
        CAP理论的 牺牲 只是说 在分区过程中 我们无法保证C 或者A 并不意味着什么都不做。因为在系统整个运行周期中，大部分时间都是正常的，
        发生分区现象的时间并不长。我们可以在分区期间进行一些操作，从而让分区故障解决后，系统能够重新达到CA状态。
        最典型的就是在分区期间进行一些操作，从而让分区故障解决后，系统根据日志进行数据恢复，使得重新达到CA状态。

*ACID
    ACID是数据库管理系统为了保证事务的正确性而提出来的一个理论，应用场景是数据库事务，包含四个约束：
        Atomicity 原子性 Consistancy 一致性 Isolation 隔离性 Durability 持久性
        ACID中的C 指的是 数据库的数据完整性，而CAP中的C指的是分布式节点中数据的一致性，二者无太多可比性。

*BASE
    BASE指 基本可用 Basically Available 软状态 Soft State 最终一致性 Eventual Consistancy 核心思想是即使无法做到强一致性（CAP的一致性就是
    强一致性），但应用可以采用适合的方式达到最终一致性。
    基本可用——分布式系统在出现故障时，允许损失部分可用性，即保证核心可用
    软状态——允许系统存在中间状态，该状态不影响系统整体可用性，这里的中间状态就是CAP理论中的数据不一致。
    最终一致性——系统中所有的数据副本经过一定时间后，最终能够达到一致的状态。
    BASE理论本质上是对CAP理论的延伸或补充，更具体的说，是对CAP中AP方案的一个补充。
        两个关键点：
            CAP理论是忽略延时的，而实际应用中延时是无法避免的
            AP方案中牺牲一致性只是指在分区期间，而不是永远放弃一致性。

===============================================================================
综上，ACID是数据库事务完整性的理论，CAP是分布式系统设计理论，BASE是CAP理论中AP方案的延伸。                            


